# Configura√ß√£o Nginx para API de Reconhecimento Facial
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Configura√ß√µes b√°sicas
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Otimiza√ß√µes de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Configura√ß√µes para upload de arquivos (fotos)
    client_max_body_size 15M;          # M√°ximo 15MB por upload
    client_body_buffer_size 128k;
    client_body_timeout 30s;
    client_header_timeout 30s;
    
    # Compress√£o
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        text/plain
        text/css
        text/xml
        text/javascript;

    # Configura√ß√µes de seguran√ßa
    server_tokens off;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    
    # Rate limiting para prote√ß√£o contra spam
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=10r/m;
    
    # Log format personalizado
    log_format api_access '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '$request_time $upstream_response_time';
    
    # Upstream para a API
    upstream facial_api {
        server 127.0.0.1:8000;
        keepalive 32;
    }
    
    # Servidor principal
    server {
        listen 80;
        server_name _;  # Substitua pelo seu dom√≠nio
        
        # Logs
        access_log /var/log/nginx/api_access.log api_access;
        error_log /var/log/nginx/api_error.log warn;
        
        # Timeout configurations
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Headers para proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Health check do Nginx
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # üÜï Configura√ß√£o espec√≠fica para /api/compare (API direta)
        location /api/compare {
            limit_req zone=upload burst=5 nodelay;
            proxy_pass http://facial_api;
            
            # Timeouts maiores para processamento de imagens
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # Log espec√≠fico para debug
            access_log /var/log/nginx/api_compare.log api_access;
        }
        
        # Endpoints da API com rate limiting normal
        location /api/v1 {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://facial_api;
        }
        
        # Endpoints de upload com rate limiting espec√≠fico
        location ~ ^/api/v1/(register-employee|verify-face|update-employee) {
            limit_req zone=upload burst=5 nodelay;
            proxy_pass http://facial_api;
            
            # Timeouts maiores para uploads
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }
        
        # Documenta√ß√£o e interface
        location ~ ^/(docs|redoc|openapi\.json) {
            proxy_pass http://facial_api;
        }
        
        # Health checks
        location /health {
            access_log off;
            proxy_pass http://facial_api;
        }
        
        # Endpoint raiz
        location / {
            proxy_pass http://facial_api;
        }
        
        # Arquivos est√°ticos (se houver)
        location /static/ {
            alias /app/static/;
            expires 1d;
            add_header Cache-Control "public, immutable";
        }
        
        # Bloquear acesso a arquivos sens√≠veis
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ \.(env|git|svn) {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # Configura√ß√£o HTTPS (desabilitada - sem certificados SSL)
    # Descomente e configure quando tiver certificados SSL v√°lidos
    #
    # server {
    #     listen 443 ssl http2;
    #     server_name _;  # Substitua pelo seu dom√≠nio
    #     
    #     # Certificados SSL (Let's Encrypt recomendado)
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     # Configura√ß√µes SSL modernas
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_prefer_server_ciphers off;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # Headers de seguran√ßa SSL
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #     
    #     # Usar as mesmas configura√ß√µes do servidor HTTP
    #     # (As configura√ß√µes de location seriam duplicadas aqui se necess√°rio)
    # }
}